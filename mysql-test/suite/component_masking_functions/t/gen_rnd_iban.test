--source include/have_masking_functions_component.inc

--echo #
--echo # Component Masking Functions: gen_rnd_iban()
--echo #

INSTALL COMPONENT 'file://component_masking_functions';

--echo # arity checks
--error ER_CANT_INITIALIZE_UDF
SELECT gen_rnd_iban('', 42, '');

--echo # argument nullness checks
--error ER_UDF_ERROR
SELECT gen_rnd_iban(NULL);

--error ER_UDF_ERROR
SELECT gen_rnd_iban(NULL, 42);
--error ER_UDF_ERROR
SELECT gen_rnd_iban('', NULL);

--echo # constraints checks
--error ER_UDF_ERROR
SELECT gen_rnd_iban('');
--error ER_UDF_ERROR
SELECT gen_rnd_iban('U');
--error ER_UDF_ERROR
SELECT gen_rnd_iban('UKK');
--error ER_UDF_ERROR
SELECT gen_rnd_iban('ЮЮ');
--error ER_UDF_ERROR
SELECT gen_rnd_iban('UK', -1);
--error ER_UDF_ERROR
SELECT gen_rnd_iban('UK', 0);
--error ER_UDF_ERROR
SELECT gen_rnd_iban('UK', 14);
--error ER_UDF_ERROR
SELECT gen_rnd_iban('UK', 35);


--echo # logic checks
--let $expected_charset = utf8mb4

--let $expression = gen_rnd_iban()
--let $regexp = ZZ[[:digit:]]{14}
--source check_expression.inc

--let $expression = gen_rnd_iban('UK')
--let $regexp = UK[[:digit:]]{14}
--source check_expression.inc

--let $expression = gen_rnd_iban('UK', 20)
--let $regexp = UK[[:digit:]]{18}
--source check_expression.inc


--echo # character set / collation checks
--let $dollar = `SELECT _utf8mb4 0x24`

--let $number_of_iterations = 16

SET @regular_charset_list = '[ "utf8mb4", "utf8mb3", "utf16", "utf16le", "utf32", "ucs2", "koi8u"]';
SET @special_charset_list = '[ "latin2", "ascii", "binary"]';
SET @charset_list = JSON_MERGE_PRESERVE(@regular_charset_list, @special_charset_list);
--let $number_of_charsets = `SELECT JSON_LENGTH(@charset_list)`
--let $i = 0
while($i < $number_of_charsets) {
  --let $expected_charset = `SELECT JSON_UNQUOTE(JSON_EXTRACT(@charset_list, '$dollar[$i]'))`
  --let $expression = gen_rnd_iban(CONVERT('UK' USING $expected_charset), 20)
  --let $regexp = UK[[:digit:]]{18}

  --let $iteration = 0
  while ($iteration < $number_of_iterations) {
    --echo chacacter set '$expected_charset': iteration $iteration
    --source check_expression.inc
    --inc $iteration
  }
  --echo ################################

  --inc $i
}

UNINSTALL COMPONENT 'file://component_masking_functions';
